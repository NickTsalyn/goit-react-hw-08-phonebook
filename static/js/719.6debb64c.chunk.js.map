{"version":3,"file":"static/js/719.6debb64c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.js","components/ConfirmModal/ConfirmModal.styled.js","components/ConfirmModal/ConfirmModal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","redux/selectors.js","components/ContactList/ContactList.jsx","Pages/Contacts.jsx","components/HomeInfo/HomeInfo.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { Button } from 'components/Button/Button';\n\nexport const FormWrapper = styled(Form)`\n  margin-top: 30px;\n`;\n\nexport const ButtonStyled = styled(Button)`\n  font-size: 20px;\n  padding: 10px 20px;\n  border-radius: 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Label = styled.label`\n  color: var(--section);\n\n  &:hover,\n  &:focus {\n    color: var(--accent);\n  }\n`;\n\nexport const ErrorMessageForm = styled(ErrorMessage)`\n  color: var(--accent);\n  font-weight: 600;\n  background-color: var(--section);\n  border-radius: 20px;\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const FieldForm = styled(Field)`\n  display: block;\n  width: inherit;\n  margin-bottom: 10px;\n  margin-top: 7px;\n  margin-right: auto;\n  margin-left: auto;\n  font-size: 20px;\n  color: var(--text);\n  border: var(--text);\n  background-color: var(--section);\n  outline: transparent;\n  border-radius: 20px;\n  padding: 10px 20px;\n\n  &:hover,\n  &:focus {\n    outline: 2px solid var(--accent);\n    box-shadow: 1px 1px 1px var(--accent);\n  }\n`;","export const selectLoading = state => state.isLoading;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n","import * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\n\nimport {\n  ButtonStyled,\n  FieldForm,\n  FormWrapper,\n  Label,\n} from './ContactForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst FormValidSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('Required'),\n  number: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = ({ name, number }) => {\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    const isDublicate = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (isDublicate) {\n      alert('This name already exists. Please enter a different name.');\n      return;\n    }\n\n    dispatch(addContacts(newContact));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormValidSchema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrapper>\n        <Label htmlFor=\"name\">\n          Name\n          <FieldForm type=\"text\" name=\"name\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <FieldForm type=\"tel\" name=\"number\" />\n        </Label>\n\n        <ButtonStyled type=\"submit\">Add contact</ButtonStyled>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  margin: 10px 0 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  color: var(--section);\n\n  &:hover,\n  &:focus {\n    color: var(--accent);\n  }\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: inherit;\n  margin: 0 auto;\n\n  margin-top: 10px;\n  color: var(--text);\n  font-weight: 600;\n  outline: transparent;\n  border: var(--text);\n  border-radius: 20px;\n  padding: 10px 20px;\n  background-color: var(--section);\n\n  &:hover,\n  &:focus {\n    outline: 2px solid var(--accent);\n    box-shadow: 1px 1px 1px var(--accent);\n  }\n`;","import { FilterInput, FilterLabel, FilterWrapper } from \"./Filter.styled\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setContactFilter } from \"redux/contacts/filterSlice\";\n\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch()\n  const filter = useSelector(state => state.filter)\n\n    return (\n        <FilterWrapper>\n      <FilterLabel htmlFor=\"Filter\">Find contacts by name</FilterLabel>\n      <FilterInput type=\"text\" name=\"Filter\" value={filter}  onChange={e => dispatch(setContactFilter(e.currentTarget.value))}/>\n      </FilterWrapper>\n    )\n}","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.div`\n  color: var(--text);\n  font-weight: 600;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ContactContainer = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: inherit;\n  background-color: var(--section);\n  border: 1px solid var(--section);\n  border-radius: 20px;\n  padding: 10px 20px;\n  min-width: fit-content;\n`;","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n\n  width: 100%;\n  height: 100%;\n\n  backdrop-filter: blur(2px);\n`;\n\nexport const Container = styled.div`\n  z-index: 2;\n\n  max-width: 250px;\n  max-height: 90vh;\n\n\n  padding: 20px;\n\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  background-color: rgba(255, 255, 255, 0.1);\n\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 16px;\n\n  backdrop-filter: blur(0.5px);\n  overflow-y: auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 20px;\n  backdrop-filter: blur(5px);\n  background-color: rgba(255, 255, 255, 0.);\n`;\n\nexport const Msg = styled.p`\n  margin-bottom: 20px;\n  line-height: 1.6;\n  font-size: 14px;\n  text-align: center;\n  color: var(--text);\n`;\n\nexport const Name = styled.span`\n  font-weight: 700;\n  font-size: 14px;\n  color: var(--text);\n`;\n\nexport const Btn = styled.button`\n  padding: 8px 18px;\n\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(9, 42, 61, 0.7);\n\n  background-color: transparent;\n\n  border: 1px solid rgba(9, 42, 61, 0.7);\n  border-radius: 10px;\n\n  transition: all 250ms ease-in-out;\n\n  cursor: pointer;\n\n  :hover {\n    color: var(--text);\n    border: 1px solid rgba(9, 42, 61, 1);\n    background-color: rgba(9, 42, 61, 0.09);\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  padding: 8px 18px;\n\n  font-size: 14px;\n  font-weight: 500;\n  color: rgba(227, 67, 67, 0.7);\n\n  background-color: transparent;\n\n  border: 1px solid rgba(227, 67, 67, 0.7);\n  border-radius: 10px;\n\n  transition: all 250ms ease-in-out;\n\n  cursor: pointer;\n\n  :hover {\n    color: rgba(227, 67, 67, 1);\n    border: 1px solid rgba(227, 67, 67, 1);\n    background-color: rgba(227, 67, 67, 0.1);\n  }\n`;","import React, { useEffect, useRef } from 'react';\nimport Modal from 'react-modal';\nimport { Btn, BtnDelete, Container, Msg, Name, Wrapper } from './ConfirmModal.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst customStyles = {\n    overlay: {\n        background: 'rgba(255, 255, 255, 0.3)',\n        backdropFilter: 'blur(2px)'\n    },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    background: 'rgba(255, 255, 255, 0.3)',\n  },\n};\n\nModal.setAppElement('#root');\n\nexport const ConfirmModal = ({ id, name, isOpen, closeModal }) => {\n    const subtitleRef = useRef();\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n      if (subtitleRef.current) {\n        subtitleRef.current.style.color = '#f00';\n      }\n    }, []);\n    const handleAfterClose = () => {\n        const modalRoot = document.getElementById('#root');\n        if (modalRoot) {\n          modalRoot.innerHTML = ''; // Remove the content of the modal root element\n        }\n      };\n\n  return (\n    <>\n     <Modal\n      isOpen={isOpen}\n      shouldCloseOnOverlayClick={true}\n      onAfterClose={handleAfterClose}\n      onRequestClose={closeModal}\n\n      style={customStyles}\n      contentLabel=\"Modal\"\n    >\n        <Container>\n        <Msg>\n          Are you sure you want to delete the contact: <Name>{name}</Name>?\n        </Msg>\n        <Wrapper>\n          <Btn type=\"button\" onClick={closeModal}>\n            Cancel\n          </Btn>\n          <BtnDelete type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n            Delete\n          </BtnDelete>\n        </Wrapper>\n      </Container>\n    </Modal>\n      \n    </>\n  );\n};","import { ContactContainer, ContactItem } from './ContactListItem.styled';\nimport { Button } from 'components/Button/Button';\nimport { useState } from 'react';\nimport { ConfirmModal } from 'components/ConfirmModal/ConfirmModal';\n\nexport const ContactListItem = ({id, name, number}) => {\n\n\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n\n\n\n  return (\n    <>\n        <ContactContainer key={id}>\n          <ContactItem>\n            {name}: {number}\n          </ContactItem>\n          <Button onClick={() => openModal()}>\n            Delete\n          </Button>\n          {modalIsOpen && <ConfirmModal id={id} name={name} isOpen={modalIsOpen} closeModal={closeModal} />}\n        </ContactContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","\n\n\nexport const selectContacts = state => state.contacts.items\nexport const selectFilter = state => state.filter;\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\nimport { selectContacts, selectFilter } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number}/>\n      ))}\n    </List>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactTitle, HomeTitle } from 'components/HomeInfo/HomeInfo.styled';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n\n    const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <div>\n        <HomeTitle>Phonebook</HomeTitle>\n        <ContactForm />\n      </div>\n      <div>\n        <ContactTitle>Contacts</ContactTitle>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const HomeWrapper = styled.section`\n  margin-top: 30px;\n`;\n\nexport const HomeTitle = styled.h1`\n  font-size: 40px;\n  color: var(--text);\n  /* background-color: var(--section); */\n  padding: 20px 20px;\n  /* border-radius: 20px; */\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const TextWrapper = styled.div`\n  color: var(--text);\n  background-color: var(--section);\n  text-align: start;\n  padding: 20px 40px;\n  border-radius: 20px;\n`;\n\nexport const MainPoints = styled.ul``;\n\nexport const Point = styled.li`\n  list-style: disc;\n  padding: 10px 0px;\n`;\n\nexport const ContactTitle = styled.h2`\n font-size: 24px;\n  color: var(--text);\n  padding: 20px 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n`"],"names":["FormWrapper","styled","Form","_templateObject","_taggedTemplateLiteral","ButtonStyled","Button","_templateObject2","Label","_templateObject3","FieldForm","ErrorMessage","_templateObject4","Field","_templateObject5","selectContacts","state","contacts","items","FormValidSchema","Yup","shape","name","min","max","matches","required","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","_ref","newContact","id","nanoid","find","contact","toLowerCase","alert","addContacts","children","_jsxs","htmlFor","type","FilterWrapper","FilterLabel","FilterInput","Filter","filter","value","onChange","e","setContactFilter","currentTarget","ContactItem","ContactContainer","Container","Wrapper","Msg","Name","Btn","_templateObject6","BtnDelete","_templateObject7","customStyles","overlay","background","backdropFilter","content","top","left","right","bottom","marginRight","transform","Modal","ConfirmModal","isOpen","closeModal","subtitleRef","useRef","useEffect","current","style","color","_Fragment","shouldCloseOnOverlayClick","onAfterClose","modalRoot","document","getElementById","innerHTML","onRequestClose","contentLabel","onClick","deleteContacts","ContactListItem","_useState","useState","_useState2","_slicedToArray","modalIsOpen","setIsOpen","List","selectFilter","ContactList","filteredContacts","includes","map","fetchContacts","HomeTitle","ContactTitle","HomeWrapper","TextWrapper","MainPoints","Point"],"sourceRoot":""}